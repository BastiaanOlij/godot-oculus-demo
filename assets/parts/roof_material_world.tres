[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://assets/cc0textures.com/plaster01.2k/Plaster01_col.jpg" type="Texture" id=1]
[ext_resource path="res://assets/cc0textures.com/plaster01.2k/Plaster01_nrm.jpg" type="Texture" id=2]
[ext_resource path="res://assets/cc0textures.com/plaster01.2k/Plaster01_rgh.jpg" type="Texture" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,skip_vertex_transform;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_roughness : hint_white;
uniform vec4 roughness_texture_channel;
uniform sampler2D texture_normal : hint_normal;
uniform float normal_scale : hint_range(-16,16);
uniform vec3 uv1_scale;

void vertex() {
	VERTEX=(WORLD_MATRIX * vec4(VERTEX, 1.0)).xyz;
	UV = VERTEX.xz * vec2(uv1_scale.x, uv1_scale.y);
	
	VERTEX=(INV_CAMERA_MATRIX * vec4(VERTEX, 1.0)).xyz;
	NORMAL = (INV_CAMERA_MATRIX * vec4(0.0, -1.0, 0.0, 0.0)).xyz;
	TANGENT = (INV_CAMERA_MATRIX * vec4(-1.0, 0.0, 0.0, 0.0)).xyz;
	BINORMAL = (INV_CAMERA_MATRIX * vec4(0.0, 0.0, -1.0, 0.0)).xyz;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	NORMALMAP = texture(texture_normal,base_uv).rgb;
	NORMALMAP_DEPTH = normal_scale;
}
"

[resource]
shader = SubResource( 1 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.0
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/roughness_texture_channel = Plane( 0, 0, 0, 1 )
shader_param/normal_scale = 1.0
shader_param/uv1_scale = Vector3( 0.1, 0.1, 1 )
shader_param/texture_albedo = ExtResource( 1 )
shader_param/texture_roughness = ExtResource( 3 )
shader_param/texture_normal = ExtResource( 2 )
